// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model User {
  id           Int           @id @default(autoincrement())
  image        String        @db.VarChar(200)
  name         String        @db.VarChar(250)
  email        String        @db.VarChar(200)
  nick_name    String        @unique @db.VarChar(100)
  tel          String        @unique @db.VarChar(14)
  createdAt    DateTime?     @default(now())
  updateAt     DateTime?     @updatedAt
  permission   Permission?   @relation(fields: [permissionId], references: [id])
  permissionId Int?
  Event        Event[]
  Participant  Participant[]

  @@map("tb_user")
}

model Event {
  id            Int          @id @default(autoincrement())
  image         String?      @db.VarChar(200)
  start_date    DateTime     @db.Date
  end_date      DateTime?    @db.Date
  start_hour    DateTime     @db.Time()
  end_hour      DateTime?    @db.Time()
  title         String       @unique @db.VarChar(150)
  description   String       @db.VarChar(150)
  cep           String?      @db.VarChar(20)
  country       String?      @db.VarChar(150)
  state         String       @db.VarChar(100)
  andress       String       @db.VarChar(250)
  district      String       @db.VarChar(250)
  active        Boolean      @default(true)
  createdAt     DateTime?    @default(now())
  updateAt      DateTime?    @updatedAt
  user          User         @relation(fields: [userId], references: [id])
  userId        Int
  comment       Comment?     @relation(fields: [commetId], references: [id])
  commetId      Int?
  like          Like?        @relation(fields: [likeId], references: [id])
  likeId        Int?
  participant   Participant? @relation(fields: [participantId], references: [id])
  participantId Int?

  @@map("tb_event")
}

model Comment {
  id          Int       @id @default(autoincrement())
  description String    @db.VarChar(150)
  createdAt   DateTime? @default(now())
  updateAt    DateTime? @updatedAt
  Event       Event[]

  @@map("tb_comment")
}

model Like {
  id        Int       @id @default(autoincrement())
  active    Boolean   @default(false)
  createdAt DateTime? @default(now())
  updateAt  DateTime? @updatedAt
  Event     Event[]

  @@map("tb_like")
}

model Participant {
  id        Int       @id @default(autoincrement())
  active     Boolean   @default(false)
  createdAt DateTime? @default(now())
  updateAt  DateTime? @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  Event     Event[]

   @@map("tb_participant")
}

model Permission {
  id        Int       @id @default(autoincrement())
  type      String    @db.VarChar(10)
  active    Boolean   @default(false)
  email     String    @db.VarChar(200)
  createdAt DateTime? @default(now())
  updateAt  DateTime? @updatedAt
  User      User[]

  @@map("tb_permission")
}
